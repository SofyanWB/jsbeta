{"version":3,"file":"static/js/6461.a6d5f987.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import r from\"../../geometry/support/GeographicTransformation.js\";import e from\"./PixelBlock.js\";import{decode as t}from\"./rasterFormats/RasterCodec.js\";import{split as s,mosaic as o,approximateTransform as i,getLocalArithmeticNorthRotations as n}from\"./rasterFunctions/pixelUtils.js\";import{create as a}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as l,load as m,getProjectionOffsetGrid as c}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as f,estimateStatisticsHistograms as p}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as u,convertToLocalDirections as S}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as d}from\"./rasterTransforms/utils.js\";import y from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import h from\"../../geometry/Extent.js\";import O from\"../../geometry/Point.js\";class N{convertVectorFieldData(r){const t=e.fromJSON(r.pixelBlock),s=u(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=e.fromJSON(r.pixelBlock),s=f(t);return Promise.resolve(s)}async decode(r){const e=await t(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=e.fromJSON(r.pixelBlock),r.extent=r.extent?h.fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=y.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=a(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:h.fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?e.fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?O.fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(null!=t&&t.toJSON())}estimateStatisticsHistograms(r){const t=p(e.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=s(e.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),s=o(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let a,l=s;return r.coefs&&(l=i(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(a=n(r.destDimension,r.gcsGrid),l=S(l,r.isUV?\"vector-uv\":\"vector-magdir\",a)),{pixelBlock:l?.toJSON(),localNorthDirections:a}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await x(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=h.fromJSON(e.projectedExtent),s=h.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new r({steps:e.datumTransformationSteps})),(e.includeGCSGrid||l(t.spatialReference,s.spatialReference,o))&&await m();const i=e.rasterTransform?d(e.rasterTransform):null;return c({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{N as default};\n"],"names":["N","r","t","e","pixelBlock","s","u","type","Promise","resolve","toJSON","f","data","options","extent","h","this","symbolizer","symbolize","y","symbolizerJSON","histograms","rendererJSON","rasterFunction","a","rasterFunctionJSON","process","primaryPixelBlocks","map","primaryPixelSizes","O","primaryRasterIds","simpleStretch","srcPixelBlock","stretchParams","p","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","o","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","l","coefs","i","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","n","S","isUV","localNorthDirections","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","x","meshType","simulationSettings","signal","vertexData","indexData","result","vertexBuffer","indexBuffer","transferList","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","m","rasterTransform","d","c","datumTransformation"],"sourceRoot":""}